#!/usr/bin/env python
import os
import sys

env = SConscript("../../godot-cpp/SConstruct")

opts = Variables([], ARGUMENTS)

opts.Add(PathVariable('target_path', 'The path where the lib is installed.', 'gdnative/'))
opts.Add(PathVariable('target_name', 'The library name.', 'ggraph', PathVariable.PathAccept))


opts.Update(env)


# For the reference:
# - CCFLAGS are compilation flags shared between C and C++
# - CFLAGS are for C-specific compilation flags
# - CXXFLAGS are for C++-specific compilation flags
# - CPPFLAGS are for pre-processor flags
# - CPPDEFINES are for pre-processor defines
# - LINKFLAGS are for linking flags

# tweak this if you want to use different folders, or more folders, to store your source code in.
env.Append(CPPPATH=['gdnative/src/'])
sources = Glob('gdnative/src/*.cpp')

# if env["platform"] == "macos":
#     library = env.SharedLibrary(
#         "game/bin/libgdsummator.{}.{}.framework/libgdsummator.{}.{}".format(
#             env["platform"], env["target"], env["platform"], env["target"]
#         ),
#         source=sources,
#     )
# else:
#     library = env.SharedLibrary(
#         "game/bin/libgdsummator{}{}".format(env["suffix"], env["SHLIBSUFFIX"]),
#         source=sources,
#     )

if env['platform'] == 'ios':
    library = env.StaticLibrary(target=env['target_path'] + env['target_name'] , source=sources)
elif env["platform"] == "macos":
    library = env.SharedLibrary(
        "game/bin/libgdsummator.{}.{}.framework/libgdsummator.{}.{}".format(
            env["platform"], env["target"], env["platform"], env["target"]
        ),
        source=sources,
    )
elif env['platform'] == "windows":
    env['target_path'] += 'win64/'
    library = env.SharedLibrary(target=env['target_path'] + env['target_name'] , source=sources)
else:
    print("Huh?")

Default(library)